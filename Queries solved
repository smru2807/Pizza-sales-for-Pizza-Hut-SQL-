-- Retrieve the total number of orders placed.  
select count(order_id) from orders;

-- Calculate the total revenue generated from pizza sales.
select sum(p.price * od.quantity) as totalrevenue from pizzas p join order_details od on
p.pizza_id=od.pizza_id;

-- Identify the highest-priced pizza.
select pt.name,p.price from pizza_types pt join pizzas p on pt.pizza_type_id=p.pizza_type_id
order by p.price desc limit 1;

-- Identify the most common pizza size ordered.  
select p.size, sum(od.quantity) as quantity from pizzas p join order_details od
on p.pizza_id=od.pizza_id
group by p.size
order by quantity desc;

-- List the top 5 most ordered pizza types along with their quantities.  
select pizza_id,count(quantity) from order_details
group by pizza_id
order by count(quantity) desc limit 5;

-- Join the necessary tables to find the total quantity of each pizza category ordered.  
SELECT 
    pt.category, sum(od.quantity)
FROM
    pizzas p
        JOIN
    pizza_types pt ON p.pizza_type_id = pt.pizza_type_id
        JOIN
    order_details od ON od.pizza_id = p.pizza_id
GROUP BY pt.category
ORDER BY sum(quantity) desc;

-- Determine the distribution of orders by hour of the day.  
select count(order_id), hour(order_time) from orders
group by hour(order_time);

-- Join relevant tables to find the category-wise distribution of pizzas.  
select category, count(name) from pizza_types
group by category;

-- Group the orders by date and calculate the average number of pizzas ordered per day.  
select avg(quantity) from
(select o.order_date, sum(od.quantity)as quantity from orders o join order_details od on
o.order_id=od.order_id
group by o.order_date) as avgpizz;

-- Determine the top 3 most ordered pizza types based on revenue. 
select * from pizzas p join pizza_types pt on p.pizza_type_id=pt.pizza_type_id join order_details od on p.pizza_id=od.pizza_id;
select pt.name, sum(od.quantity * p.price) as revenue from pizzas p 
join pizza_types pt 
on p.pizza_type_id=pt.pizza_type_id 
join order_details od 
on p.pizza_id=od.pizza_id
group by pt.name
order by revenue desc limit 3;

-- Calculate the percentage contribution of each pizza type to total revenue.  
select pizza_types.category,
round(sum(order_details.quantity*pizzas.price) / (SELECT
ROUND(SUM(order_details.quantity * pizzas.price),2) AS total_sales
FROM
order_details
JOIN pizzas ON pizzas.pizza_id = order_details.pizza_id) *100,2) as revenue
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.category order by revenue desc;

-- Analyze the cumulative revenue generated over time.  
select order_date, sum(revenue) over(order by order_date) as cum_revenue
from
(select orders.order_date,
sum(order_details.quantity * pizzas.price) as revenue
from order_details 
join pizzas on order_details.pizza_id = pizzas.pizza_id
join orders on orders.order_id = order_details.order_id
group by orders.order date) as sales;

-- Determine the top 3 most ordered pizza types based on revenue for each pizza category. 
select pizza_types.category,
round(sum(order_details.quantity*pizzas.price) / (SELECT
round(sum(order_details.quantity * pizzas.price), 2) AS total_sales
from
order_details
join pizzas ON pizzas.pizza_id = order_details.pizza_id) *100,2) as revenue
from pizza_types 
join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.category order by revenue desc;
